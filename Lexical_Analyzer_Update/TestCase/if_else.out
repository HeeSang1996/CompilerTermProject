id void
id main
lparen (
rparen )
lbrace {
vtype bool
id a
assign =
LOGIC true
semi ;
vtype int
id buf
assign =
num 0
semi ;
vtype int
id buf2
assign =
num 0
semi ;
if if
lparen (
id a
rparen )
lbrace {
rbrace }
if if
lparen (
id a
rparen )
lbrace {
rbrace }
if if
lparen (
id a
rparen )
lbrace {
rbrace }
if if
lparen (
id a
rparen )
lbrace {
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
else else
lbrace {
id buf2
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
else else
lbrace {
id buf2
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
else else
lbrace {
id buf2
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
else else
lbrace {
id buf2
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
else else
if if
lbrace {
id buf2
addsub +
addsub +
semi ;
rbrace }
else else
lbrace {
id buf2
addsub +
addsub +
semi ;
rbrace }
if if
lparen (
id a
rparen )
lbrace {
id buf
addsub +
addsub +
semi ;
rbrace }
else else
if if
lbrace {
id buf2
addsub +
addsub +
semi ;
rbrace }
else else
lbrace {
id buf2
addsub +
addsub +
semi ;
rbrace }
rbrace }
